module.exports = {
    root: true,

    extends: [
        "eslint:recommended",
        "plugin:import/errors",
        "plugin:import/warnings",
        "plugin:import/typescript",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "prettier",
        "plugin:prettier/recommended",
        "plugin:cypress/recommended",
    ],

    parser: "@typescript-eslint/parser",

    plugins: ["@typescript-eslint", "prettier", "unused-imports"],

    env: {
        browser: true,
        commonjs: true,
        es6: true,
        node: true,
        jest: true,
    },

    globals: {
        describe: true,
        it: true,
        expect: true,
        beforeEach: true,
        afterEach: true,
        beforeAll: true,
        afterAll: true,
    },

    parserOptions: {
        ecmaVersion: 6,
        sourceType: "module",
        ecmaFeatures: {
            jsx: true,
            generators: true,
            experimentalObjectRestSpread: true,
        },
    },

    settings: {
        "import/ignore": ["node_modules", "\\.(json|css|jpg|png|gif|eot|svg|ttf|woff|woff2|mp4|webm)$"],
        "import/extensions": [".js"],
        "import/resolver": {
            typescript: {
                alwaysTryTypes: true,
            },
        },
    },

    rules: {
        "comma-dangle": ["error", "always-multiline"],
        "no-debugger": "warn",
        "no-console": "off",
        "no-alert": "warn",
        "no-empty": "error",
        "no-extra-semi": "error",
        quotes: [2, "double", "avoid-escape"],
        semi: "error",
        curly: "error",
        "valid-jsdoc": "off",
        "space-unary-ops": "error",
        "block-scoped-var": "error",
        "consistent-return": "off",
        "dot-notation": "error",
        "one-var-declaration-per-line": "error",
        "no-trailing-spaces": "error",
        "constructor-super": "error",
        "no-var": "error",
        "import/no-named-as-default": "off",
        "no-prototype-builtins": "off",
        "no-case-declarations": "off",
        "no-useless-escape": "off",
        "@typescript-eslint/ban-ts-comment": "off",
        "@typescript-eslint/interface-name-prefix": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/member-delimiter-style": "off",
        "@typescript-eslint/ban-types": "off",
        "@typescript-eslint/naming-convention": [
            "warn",
            {
                selector: "variable",
                format: ["camelCase", "StrictPascalCase"],
            },
            {
                selector: "interface",
                format: ["PascalCase"],
            },
            {
                selector: "function",
                format: ["camelCase", "StrictPascalCase"],
            },
        ],
        "@typescript-eslint/no-use-before-define": "off",
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-this-alias": "off",
        "@typescript-eslint/ban-ts-ignore": "off",
        "@typescript-eslint/no-inferrable-types": "off",
        "@typescript-eslint/no-empty-interface": "off",
        "@typescript-eslint/prefer-as-const": "off",
        "@typescript-eslint/no-unused-vars": "warn",
        "@typescript-eslint/no-namespace": "off",
        "unused-imports/no-unused-imports": "error",
        "unused-imports/no-unused-vars": [
            "off",
            { vars: "all", varsIgnorePattern: "^_", args: "after-used", argsIgnorePattern: "^_" },
        ],
        "prettier/prettier": [
            "error",
            {},
            {
                usePrettierrc: true,
            },
        ],
        "max-lines": ["warn", { max: 750, skipBlankLines: true, skipComments: true }],
        "cypress/no-unnecessary-waiting": ["warn"],
        "cypress/unsafe-to-chain-command": ["warn"],
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/no-duplicate-enum-values": "warn",
    },

    overrides: [
        {
            files: ["*.json"],
            rules: {
                "comma-dangle": "off",
                semi: "off",
            },
        },
        {
            files: ["*.js"],
            rules: {
                "@typescript-eslint/no-var-requires": "off",
            },
        },
        {
            files: [
                "config/**/env/*.ts",
                "*.mock.ts",
                "*.mockData.ts",
                "*.mock-data.ts",
                "*.data.ts",
                "*.mocks.ts",
                "*data.ts",
                "*.js",
                "**/legacy/**",
                "**/*-legacy/**",
            ],
            rules: {
                "max-lines": "off",
                "@typescript-eslint/naming-convention": "off",
            },
        },
        {
            files: ["constants/**/*.ts", "*.js"],
            rules: {
                "@typescript-eslint/naming-convention": "off",
            },
        },
        // Override disabled until teams have time to fix current large spec files
        // {
        //     files: ["*.spec.ts"],
        //     rules: {
        //         "max-lines": ["error", { max: 750, skipBlankLines: true, skipComments: true }],
        //     },
        // },
    ],
};
